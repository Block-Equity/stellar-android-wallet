apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "blockeq.com.stellarwallet"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 21
        versionName "1.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    androidExtensions {
        experimental = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        baseline file("lint-baseline.xml")
    }
}

def getVersionCode() {
    def commandResult = 'git log --oneline'.execute(null, rootDir) | 'wc -l'.execute(null, rootDir)
    def revNum = commandResult.text.trim()
    def matcher = revNum =~ /(\d+)\+?/
    if (!matcher.matches()) {
        throw new IllegalArgumentException("Git psuedo-revision $revNum does not match \\d+\\+?.")
    }
    def code = matcher[0][1]
    return code.toInteger()
}

def getVersionHash() {
    return ('git rev-parse --short HEAD').execute(null, rootDir).text.trim()
}

def getBranch() {
    return ('git branch').execute(null, rootDir).text.trim()
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constrainLayoutVersion"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.volley:volley:1.1.1'

    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$lifecycleVersion"

    implementation "com.google.android:flexbox:$flexboxVersion"
    implementation('com.squareup.picasso:picasso:2.71828') {
        exclude group: 'com.android.support', module: 'exifinterface'
        exclude group: 'com.squareup.okio', module: 'okio'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'
    implementation "io.github.novacrypto:BIP39:$novaCryptoVersion"
    implementation "com.andrognito.pinlockview:pinlockview:$pinlockviewVersion"
    implementation "com.toptoche.searchablespinner:searchablespinnerlibrary:$searchablespinnerVersion"
    implementation "com.journeyapps:zxing-android-embedded:$zxingAndroidVersion"
    implementation "com.github.davidmigloz:number-keyboard:$numberKeyBoardVersion"
    implementation "com.brandongogetap:stickyheaders:$stickyheadersVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestImplementation "com.android.support.test:rules:$testRunnerVersion"
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    //TODO this should be used only in debug builds
    implementation 'com.facebook.stetho:stetho:1.5.0'

    // ViewModel and LiveData
    implementation "android.arch.lifecycle::$lifecycle_version"
    // alternatively - just ViewModel
    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version"
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"

    kapt "android.arch.lifecycle:compiler:$lifecycle_version" // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    implementation('com.facebook.stetho:stetho:1.5.0') {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    implementation('com.facebook.stetho:stetho-okhttp3:1.5.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    implementation("com.github.stellar:java-stellar-sdk:$stellarVersion") {
        transitive = false
    }

    implementation 'com.jakewharton.timber:timber:4.7.1'
}
